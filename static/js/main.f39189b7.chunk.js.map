{"version":3,"sources":["components/EventComponent/Event.js","components/AddEvent/AddEvent.js","App.js","serviceWorker.js","index.js","dzieje-sie-banner.png"],"names":["Event","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","_this2","fetch","then","response","json","myJson","map","item","react_default","a","createElement","key","eventId","name","address","postcode","town","eventDate","setState","console","log","Table","responsive","striped","bordered","condensed","Component","AddEvent","context","handleChange","bind","assertThisInitialized","date","length","e","value","target","FormGroup","controlId","validationState","getValidationState","ControlLabel","FormControl","type","placeholder","onChange","Feedback","HelpBlock","App","className","Navbar","Header","Brand","href","Nav","NavDropdown","eventKey","title","id","MenuItem","NavItem","src","banner","alt","EventComponent_Event","components_AddEvent_AddEvent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f39189b7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nclass Event extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://matgorzynski.hostingasp.pl/event/all')\r\n        .then(response =>  {\r\n            return response.json();\r\n        })\r\n        .then(myJson => {\r\n            let data = myJson.map((item) => {\r\n                return (\r\n                        <tr key={item.eventId}>\r\n                            <td>{item.eventId}</td>\r\n                            <td>{item.name}</td>\r\n                            <td>{item.address}</td>\r\n                            <td>{item.postcode}</td>\r\n                            <td>{item.town}</td>\r\n                            <td>{item.eventDate}</td>\r\n                        </tr>\r\n                )\r\n            })\r\n            this.setState({ data : data });\r\n            console.log(\"state\", this.state.data);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Table responsive striped bordered condensed>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Nazwa</th>\r\n                            <th>Miejsce</th>\r\n                            <th>Kod pocztowy</th>\r\n                            <th>Miasto</th>\r\n                            <th>Data wydarzenia</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.data}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport { FormGroup, ControlLabel, FormControl, HelpBlock } from 'react-bootstrap';\r\n\r\nclass AddEvent extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n    \r\n        this.state = {\r\n          name: '',\r\n          address: '',\r\n          postcode: '',\r\n          town: '',\r\n          date: ''\r\n        };\r\n      }\r\n    \r\n      getValidationState() {\r\n        const length = this.state.name.length;\r\n        if (length >= 12) return 'success';\r\n        else if (length > 0) return 'error';\r\n        return null;\r\n      }\r\n    \r\n      handleChange(e) {\r\n        this.setState({ value: e.target.value });\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n        <div>\r\n          <form>\r\n            <FormGroup\r\n              controlId=\"formBasicText\"\r\n              validationState={this.getValidationState()}\r\n            >\r\n              <ControlLabel>Dodaj wydarzenie</ControlLabel>\r\n              <FormControl\r\n                type=\"text\"\r\n                value={this.state.name}\r\n                placeholder=\"Nazwa wydarzenia\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <FormControl.Feedback />\r\n              <HelpBlock>Nazwa musi posiadać conajmniej 12 znaków</HelpBlock>\r\n              <FormControl\r\n                type=\"text\"\r\n                value={this.state.address}\r\n                placeholder=\"Miejsce wydarzenia\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <FormControl\r\n                type=\"text\"\r\n                value={this.state.address}\r\n                placeholder=\"Kod pocztowy\"\r\n                onChange={this.handleChange}\r\n               />\r\n               <FormControl\r\n                type=\"text\"\r\n                value={this.state.address}\r\n                placeholder=\"Miasto\"\r\n                onChange={this.handleChange}\r\n               />\r\n               <FormControl\r\n                type=\"date\"\r\n                value={this.state.address}\r\n                placeholder=\"Data wydarzenia\"\r\n                onChange={this.handleChange}\r\n               />\r\n            </FormGroup>\r\n          </form>\r\n        </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default AddEvent;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Navbar, NavItem, NavDropdown, MenuItem, Nav } from 'react-bootstrap';\r\nimport Event from \"./components/EventComponent/Event\";\r\nimport AddEvent from \"./components/AddEvent/AddEvent\";\r\nimport banner from './dzieje-sie-banner.png';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar>\r\n          <Navbar.Header>\r\n            <Navbar.Brand>\r\n              <a href=\"#home\">Dzieje się</a>\r\n            </Navbar.Brand>\r\n          </Navbar.Header>\r\n          <Nav>\r\n            <NavDropdown eventKey={1} title=\"Kategorie\" id=\"basic-nav-dropdown\">\r\n              <MenuItem eventKey={1.1}>Muzyka</MenuItem>\r\n              <MenuItem eventKey={1.2}>Sztuka</MenuItem>\r\n              <MenuItem eventKey={1.3}>Komedia</MenuItem>\r\n              <MenuItem eventKey={1.4}>Gry</MenuItem>\r\n              <MenuItem eventKey={1.5}>Film</MenuItem>\r\n              <MenuItem eventKey={1.6}>Sport</MenuItem>\r\n            </NavDropdown>\r\n            <NavDropdown eventKey={2} title=\"Miasta\" id=\"basic-nav-dropdown\">\r\n              <MenuItem eventKey={2.1}>Warszawa</MenuItem>\r\n              <MenuItem eventKey={2.2}>Poznań</MenuItem>\r\n              <MenuItem eventKey={2.3}>Gdańsk</MenuItem>\r\n              <MenuItem eventKey={2.4}>Suwałki</MenuItem>\r\n              <MenuItem eventKey={2.5}>Kraków</MenuItem>\r\n              <MenuItem eventKey={2.6}>Katowice</MenuItem>\r\n              <MenuItem eventKey={2.7}>Radom</MenuItem>\r\n            </NavDropdown>\r\n            <NavItem eventKey={3} href=\"#\">\r\n              Dodaj wydarzenie\r\n            </NavItem>\r\n          </Nav>\r\n        </Navbar>\r\n        <img src={banner} alt={\"Banner\"} />\r\n          <Event />\r\n          <AddEvent />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/dzieje-sie-banner.ddcbc9f8.png\";"],"sourceRoot":""}